const newQuoteButton=document.querySelector("#new-quote"),quote=document.querySelector("#quote-box"),quoteBody=quote.querySelector("#text"),quoteAuthor=quote.querySelector("#author"),loading=document.querySelector("#loading"),wrapper=document.querySelector("#wrapper"),tweetQuoteButton=document.querySelector("#tweet-quote"); const getRandomColor=()=>{const t=["#16a085","#27ae60","#2c3e50","#f39c12","#e74c3c","#9b59b6","#FB6964","#342224","#472E32","#BDBB99","#77B1A9","#73A857"];return t[Math.floor(Math.random()*t.length)]}; const LoadingSpinner={htmlEl:loading,displayNone(){this.htmlEl.classList.add("display-none")},show(){this.htmlEl.classList.remove("display-none")}}; const TYPES={setQuote:"[Quote] Set Quote",uiStartLoading:"[UI] Set Loading",uiFinishLoading:"[UI] Finish Loading"}; const Quote={htmlEl:quote,update:(t,e)=>{quoteAuthor.textContent=t,quoteBody.textContent=e},displayNone(){this.htmlEl.classList.add("display-none")},show(){this.htmlEl.classList.remove("display-none")}}; const quoteReducer=(t={author:"",quote:""},e)=>{switch(e.type){case TYPES.setQuote:return{...e.payload};default:return t}}; const uiReducer=(t={loading:!0},e)=>{switch(e.type){case TYPES.uiStartLoading:return{loading:!0};case TYPES.uiFinishLoading:return{loading:!1};default:return t}};const{createStore:createStore,combineReducers:combineReducers,applyMiddleware:applyMiddleware}=Redux,{default:thunk}=ReduxThunk,reducers=combineReducers({quote:quoteReducer,ui:uiReducer}); const updateBackgroundColor=t=>{wrapper.style.backgroundColor=`${t}`,wrapper.style.color=`${t}`};const setQuote=(t,e)=>({type:TYPES.setQuote,payload:{author:t,body:e}}); const uiStartLoading=()=>({type:TYPES.uiStartLoading}); const uiFinishLoading=()=>({type:TYPES.uiFinishLoading}); const fetchNewQuote=()=>async()=>{console.log("Fetching quote..."),dispatch(uiStartLoading());const t=await fetch("https://api.quotable.io/random"),e=await t.json();dispatch(setQuote(e.author,e.content)),dispatch(uiFinishLoading()),console.log("Fetching quote done!")};const store=createStore(reducers,applyMiddleware(thunk)); const{subscribe:onUpdateStore,dispatch:dispatch}=store;const updateComponent=()=>{const{quote:t,ui:e}=store.getState(),o=getRandomColor();e.loading?(LoadingSpinner.show(),Quote.displayNone()):(updateBackgroundColor(o),tweetQuoteButton.setAttribute("href",`https://twitter.com/intent/tweet?text=${encodeURI(t.body)+"- "+t.author}`),Quote.show(),Quote.update(t.author,t.body),LoadingSpinner.displayNone())};onUpdateStore(updateComponent),newQuoteButton.addEventListener("click",()=>{dispatch(fetchNewQuote())}),newQuoteButton.click();